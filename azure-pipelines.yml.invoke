#Comment
trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  resourceGroup: 'az-400'
  webAppName: 'web-app-spacegame-koyo'
  serviceConnection: '52b9f645-f47f-43f4-8ce8-c842a11ba7df'
  AZURE_SUBSCRIPTION_ID: 'da1d03b9-3b84-491e-968d-9668e1385ca0'

stages:

- stage: ValidateARM
  displayName: 'Validate ARM Template'
  jobs:
  - job: Validate
    steps:
    - task: AzureResourceGroupDeployment@2
      inputs:
        azureSubscription: '$(serviceConnection)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroup)'
        location: 'France Central'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)/web-app.json'
        overrideParameters:  '-webAppName $(webAppName)'
        deploymentMode: 'Validation'  # Validate the ARM template


- stage: DeployInfrastructure
  displayName: 'Deploy Infrastructure'
  jobs:
  - job: DeployARM
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      inputs:
        deploymentScope: 'Resource Group'
        azureResourceManagerConnection: '$(serviceConnection)'
        action: 'Create Or Update Resource Group'
        resourceGroupName: '$(resourceGroup)'
        location: 'France Central'
        templateLocation: 'Linked artifact'
        csmFile: '$(Build.SourcesDirectory)/web-app.json'
        overrideParameters: '-webAppName $(webAppName)'
        deploymentMode: 'Incremental'

- stage: Build
  displayName: 'Build Application'
  dependsOn: DeployInfrastructure
  jobs:
  - job: Build
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '6.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '**/*.sln'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        publishWebProjects: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Application'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'drop'
              targetPath: '$(Pipeline.Workspace)/drop'

          # Deployment Gate: Check for Azure Monitor Alerts
          - task: InvokeRESTAPI@2
            inputs:
              connectionType: 'connectedServiceName'
              serviceConnection: '$(serviceConnection)'
              method: 'GET'
              headers: '{"Content-Type":"application/json"}'
              url: 'https://management.azure.com/subscriptions/$(AZURE_SUBSCRIPTION_ID)/resourceGroups/$(resourceGroup)/providers/Microsoft.Insights/metricAlerts?api-version=2.0-preview.1'
              waitForCompletion: 'true'
              successCriteria: '$.value[?(@.properties.condition.allOf[0].metricValue > 75)].length == 0'
            name: 'CheckAlerts'

          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(serviceConnection)'
              appType: 'webApp'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/Tailspin.SpaceGame.Web.zip'
              runtimeStack: 'DOTNETCORE:6.0'
